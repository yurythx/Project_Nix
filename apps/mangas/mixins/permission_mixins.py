"""
MÃ³dulo contendo mixins personalizados para controle de permissÃµes nas views de mangÃ¡s.
"""
from apps.common.mixins import (
    BaseOwnerOrStaffMixin,
    StaffOrSuperuserRequiredMixin,
    ReadOnlyMixin,
    CreatorRequiredMixin
)
from abc import ABC, abstractmethod
from typing import Optional, Any


class BasePermissionMixin(ABC):
    """Mixin base abstrato para permissÃµes."""
    
    @abstractmethod
    def has_permission(self, request, obj=None) -> bool:
        pass
    
    @abstractmethod
    def get_permission_denied_message(self) -> str:
        pass

class MangaOwnerOrStaffMixin(BasePermissionMixin, BaseOwnerOrStaffMixin):
    """Mixin extensÃ­vel para verificaÃ§Ã£o de proprietÃ¡rio do mangÃ¡."""
    
    def has_permission(self, request, obj=None) -> bool:
        if request.user.is_staff or request.user.is_superuser:
            return True
        
        if obj and hasattr(obj, 'criado_por'):
            return obj.criado_por == request.user
        
        return False
    
    def get_permission_denied_message(self) -> str:
        return "ğŸš« Acesso negado! VocÃª sÃ³ pode editar ou excluir mangÃ¡s que vocÃª criou."
    
    def _get_owner(self, obj):
        return getattr(obj, 'criado_por', None)


class ChapterOwnerOrStaffMixin(BaseOwnerOrStaffMixin):
    """
    Mixin que verifica se o usuÃ¡rio Ã© o proprietÃ¡rio do capÃ­tulo ou tem permissÃ£o de staff.
    """
    permission_denied_message = "ğŸš« Acesso negado! VocÃª sÃ³ pode editar ou excluir capÃ­tulos de mangÃ¡s que vocÃª criou."
    redirect_url = 'mangas:manga_list'
    
    def _get_owner(self, obj):
        """
        ObtÃ©m o criador do mangÃ¡ relacionado ao capÃ­tulo.
        Considera a estrutura hierÃ¡rquica: Manga â†’ Volume â†’ Capitulo
        """
        try:
            # Tenta acessar atravÃ©s da propriedade manga (para compatibilidade)
            if hasattr(obj, 'manga'):
                return getattr(obj.manga, 'criado_por', None)
            
            # Acessa atravÃ©s da estrutura hierÃ¡rquica
            if hasattr(obj, 'volume') and obj.volume:
                return getattr(obj.volume.manga, 'criado_por', None)
                
            return None
        except Exception:
            return None


class PageOwnerOrStaffMixin(BaseOwnerOrStaffMixin):
    """
    Mixin que verifica se o usuÃ¡rio Ã© o proprietÃ¡rio da pÃ¡gina ou tem permissÃ£o de staff.
    """
    permission_denied_message = "ğŸš« Acesso negado! VocÃª sÃ³ pode editar ou excluir pÃ¡ginas de capÃ­tulos que vocÃª criou."
    redirect_url = 'mangas:manga_list'
    
    def _get_owner(self, obj):
        """
        ObtÃ©m o criador do mangÃ¡ relacionado Ã  pÃ¡gina.
        Considera a estrutura hierÃ¡rquica: Manga â†’ Volume â†’ Capitulo â†’ Pagina
        """
        try:
            if hasattr(obj, 'capitulo') and obj.capitulo:
                # Usa o mixin de capÃ­tulo para reutilizar a lÃ³gica
                chapter_mixin = ChapterOwnerOrStaffMixin()
                chapter_mixin.request = self.request
                return chapter_mixin._get_owner(obj.capitulo)
            return None
        except Exception:
            return None


class VolumeOwnerOrStaffMixin(BaseOwnerOrStaffMixin):
    """
    Mixin que verifica se o usuÃ¡rio Ã© o proprietÃ¡rio do volume ou tem permissÃ£o de staff.
    """
    permission_denied_message = "ğŸš« Acesso negado! VocÃª sÃ³ pode editar ou excluir volumes de mangÃ¡s que vocÃª criou."
    redirect_url = 'mangas:manga_list'
    
    def _get_owner(self, obj):
        """ObtÃ©m o criador do mangÃ¡ relacionado ao volume."""
        try:
            if hasattr(obj, 'manga'):
                return getattr(obj.manga, 'criado_por', None)
            return None
        except Exception:
            return None


# Mixins especÃ­ficos para mangÃ¡s
class MangaCreatorRequiredMixin(CreatorRequiredMixin):
    """
    Mixin que requer que o usuÃ¡rio seja o criador do mangÃ¡.
    Mais restritivo que MangaOwnerOrStaffMixin.
    """
    permission_denied_message = "ğŸš« Acesso negado! Apenas o criador do mangÃ¡ pode realizar esta aÃ§Ã£o."
    redirect_url = 'mangas:manga_list'


class MangaReadOnlyMixin(ReadOnlyMixin):
    """
    Mixin para views de mangÃ¡ somente leitura.
    """
    redirect_url = 'mangas:manga_list'
