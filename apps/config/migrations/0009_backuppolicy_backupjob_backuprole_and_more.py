# Generated by Django 5.2.4 on 2025-08-04 15:06

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("config", "0008_backupmetadata"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BackupPolicy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "policy_type",
                    models.CharField(
                        choices=[
                            ("database", "Database"),
                            ("media", "Media Files"),
                            ("configuration", "Configuration"),
                            ("application", "Application Data"),
                            ("full_system", "Full System"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "backup_frequency",
                    models.CharField(
                        choices=[
                            ("real_time", "Real Time (CDC)"),
                            ("hourly", "Hourly"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "retention_days",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "primary_storage_type",
                    models.CharField(default="local_disk", max_length=50),
                ),
                (
                    "secondary_storage_type",
                    models.CharField(default="cloud_s3", max_length=50),
                ),
                ("offsite_storage_enabled", models.BooleanField(default=True)),
                ("air_gapped_enabled", models.BooleanField(default=True)),
                ("encryption_enabled", models.BooleanField(default=True)),
                (
                    "encryption_algorithm",
                    models.CharField(default="AES-256", max_length=20),
                ),
                ("immutable_backup", models.BooleanField(default=True)),
                ("compliance_frameworks", models.JSONField(default=list)),
                (
                    "data_classification",
                    models.CharField(
                        choices=[
                            ("public", "Public"),
                            ("internal", "Internal"),
                            ("confidential", "Confidential"),
                            ("restricted", "Restricted"),
                        ],
                        default="internal",
                        max_length=20,
                    ),
                ),
                (
                    "rto_minutes",
                    models.PositiveIntegerField(
                        help_text="Recovery Time Objective in minutes"
                    ),
                ),
                (
                    "rpo_minutes",
                    models.PositiveIntegerField(
                        help_text="Recovery Point Objective in minutes"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_policies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_policies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Backup Policy",
                "verbose_name_plural": "Backup Policies",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BackupJob",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "backup_method",
                    models.CharField(
                        choices=[
                            ("full", "Full Backup"),
                            ("incremental", "Incremental"),
                            ("differential", "Differential"),
                            ("snapshot", "Snapshot"),
                            ("continuous", "Continuous Data Protection"),
                        ],
                        max_length=20,
                    ),
                ),
                ("source_path", models.TextField()),
                ("destination_paths", models.JSONField(default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("verifying", "Verifying Integrity"),
                            ("verified", "Verified"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("scheduled_at", models.DateTimeField()),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("total_size_bytes", models.BigIntegerField(blank=True, null=True)),
                (
                    "compressed_size_bytes",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("transfer_rate_mbps", models.FloatField(blank=True, null=True)),
                (
                    "checksum_algorithm",
                    models.CharField(default="SHA-256", max_length=20),
                ),
                (
                    "checksum_value",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                ("integrity_verified", models.BooleanField(default=False)),
                ("log_output", models.TextField(blank=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "triggered_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "policy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="config.backuppolicy",
                    ),
                ),
            ],
            options={
                "verbose_name": "Backup Job",
                "verbose_name_plural": "Backup Jobs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BackupRole",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                (
                    "role_level",
                    models.CharField(
                        choices=[
                            ("viewer", "Backup Viewer"),
                            ("operator", "Backup Operator"),
                            ("admin", "Backup Administrator"),
                            ("auditor", "Backup Auditor"),
                            ("compliance_officer", "Compliance Officer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("can_view_backups", models.BooleanField(default=True)),
                ("can_create_backups", models.BooleanField(default=False)),
                ("can_restore_backups", models.BooleanField(default=False)),
                ("can_delete_backups", models.BooleanField(default=False)),
                ("can_manage_policies", models.BooleanField(default=False)),
                ("can_view_audit_logs", models.BooleanField(default=False)),
                ("can_access_encrypted_data", models.BooleanField(default=False)),
                ("allowed_data_classifications", models.JSONField(default=list)),
                ("allowed_backup_types", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "conflicting_roles",
                    models.ManyToManyField(blank=True, to="config.backuprole"),
                ),
            ],
            options={
                "verbose_name": "Backup Role",
                "verbose_name_plural": "Backup Roles",
            },
        ),
        migrations.CreateModel(
            name="BackupAccessRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "request_type",
                    models.CharField(
                        choices=[
                            ("restore", "Restore Request"),
                            ("download", "Download Request"),
                            ("delete", "Delete Request"),
                            ("role_assignment", "Role Assignment Request"),
                        ],
                        max_length=20,
                    ),
                ),
                ("backup_id", models.CharField(blank=True, max_length=255, null=True)),
                ("justification", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Approval"),
                            ("approved", "Approved"),
                            ("denied", "Denied"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("approval_notes", models.TextField(blank=True)),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approver",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="backup_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="backup_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requested_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="config.backuprole",
                    ),
                ),
            ],
            options={
                "verbose_name": "Backup Access Request",
                "verbose_name_plural": "Backup Access Requests",
                "ordering": ["-requested_at"],
            },
        ),
        migrations.CreateModel(
            name="BackupAuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("backup_created", "Backup Created"),
                            ("backup_restored", "Backup Restored"),
                            ("backup_deleted", "Backup Deleted"),
                            ("policy_created", "Policy Created"),
                            ("policy_modified", "Policy Modified"),
                            ("access_granted", "Access Granted"),
                            ("access_denied", "Access Denied"),
                            ("integrity_check", "Integrity Check"),
                            ("retention_cleanup", "Retention Cleanup"),
                        ],
                        max_length=30,
                    ),
                ),
                ("resource_type", models.CharField(max_length=50)),
                ("resource_id", models.CharField(max_length=255)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("details", models.JSONField(default=dict)),
                ("before_state", models.JSONField(blank=True, null=True)),
                ("after_state", models.JSONField(blank=True, null=True)),
                ("success", models.BooleanField()),
                ("error_message", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["action_type", "timestamp"],
                        name="config_back_action__ee74e5_idx",
                    ),
                    models.Index(
                        fields=["user", "timestamp"],
                        name="config_back_user_id_896750_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "resource_id"],
                        name="config_back_resourc_b80d94_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="UserBackupRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("valid_from", models.DateTimeField()),
                ("valid_until", models.DateTimeField(blank=True, null=True)),
                ("approval_reason", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="approved_role_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="config.backuprole",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User Backup Role",
                "verbose_name_plural": "User Backup Roles",
                "unique_together": {("user", "role")},
            },
        ),
    ]
